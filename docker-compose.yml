services:
  nginx:
    image: nginx:1.25.2
    ports:
      - "80:80"
    volumes:
      - ./docker_file/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - spring
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G

  nginx_exporter:
    image: nginx/nginx-prometheus-exporter
    ports:
      - "9113:9113"
    command: -nginx.scrape-uri=http://server-java-nginx-1:80/nginx_status

  mysql:
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=application
      - MYSQL_PASSWORD=application
      - MYSQL_DATABASE=hhplus
    volumes:
      - ./data/mysql/:/var/lib/mysql
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 8G

  mysql_exporter:
    image: prom/mysqld-exporter
    volumes:
      - ./docker_file/my.cnf:/.my.cnf
    ports:
      - "9104:9104"

  redis:
    image: redis:7.4.3
    ports:
      - "6379:6379"
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 8G

  redis_exporter:
    image: oliver006/redis_exporter
    ports:
      - "9121:9121"
    environment:
      - REDIS_ADDR=redis://server-java-redis-1:6379

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./docker_file/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - --web.enable-remote-write-receiver
      - --enable-feature=native-histograms
      - --config.file=/etc/prometheus/prometheus.yml
    extra_hosts:
      - "host.docker.internal:host-gateway"

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - ./docker_file/grafana-storage:/var/lib/grafana
    user: "$UID:$GID"

  influxdb:
    image: influxdb:2
    ports:
      - "8086:8086"
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME_FILE: /run/secrets/influxdb2-admin-username
      DOCKER_INFLUXDB_INIT_PASSWORD_FILE: /run/secrets/influxdb2-admin-password
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN_FILE: /run/secrets/influxdb2-admin-token
      DOCKER_INFLUXDB_INIT_ORG: docs
      DOCKER_INFLUXDB_INIT_BUCKET: home
    secrets:
      - influxdb2-admin-username
      - influxdb2-admin-password
      - influxdb2-admin-token
    volumes:
      - type: volume
        source: influxdb2-data
        target: /var/lib/influxdb2
      - type: volume
        source: influxdb2-config
        target: /etc/influxdb2

  spring:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=load
    depends_on:
      - mysql
      - redis
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2G
    ports:
      - "8080:8080"

secrets:
  influxdb2-admin-username:
    file: ./docker_file/.env.influxdb2-admin-username
  influxdb2-admin-password:
    file: ./docker_file/.env.influxdb2-admin-password
  influxdb2-admin-token:
    file: ./docker_file/.env.influxdb2-admin-token
volumes:
  influxdb2-data:
  influxdb2-config: